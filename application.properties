
#Redis connection
logging.level.storehouse=trace
     # Redis server host
    spring.data.redis.host=localhost
    # Redis server port
    spring.data.redis.port=6379
    # Redis server password
    spring.data.redis.password=password

#Kafka connection

#...
spring.kafka.bootstrap-servers=http://localhost:9092

#Kafka topics
app.message-broker-topics.sensor-data=sensor-topic
app.message-broker-topics.reduced-data=reduce-data

# Sensor data from:
#topic name: aim for sensor data ("sensorData-out-0" - binding name in sensors imitator app)
spring.cloud.stream.bindings.sensorData-out-0.destination=${app.message-broker-topics.sensor-data}


#Message broker:
    #Reducer in:
    spring.cloud.stream.bindings.storeDataChangeOccupation-in-0.group=reducer_sensor-data
    spring.cloud.stream.bindings.storeDataChangeOccupation-in-0.destination=${app.message-broker-topics.sensor-data}
    #Reducer out:
    app.reducer.binding-output-name=reducerOutputBindingName
    spring.cloud.stream.bindings.reducerOutputBindingName-out-0.destination=${app.message-broker-topics.reduced-data}

    #Populator in:
    spring.cloud.stream.bindings.storeDataPopulatorHandler-in-0.group=populator_sensor-data-redused
    spring.cloud.stream.bindings.storeDataPopulatorHandler-in-0.destination=${app.message-broker-topics.reduced-data}

    #Analyser


#API
    #ContainerProvider
        app.container_provider.host=localhost
	    app.container_provider.port=8082
        app.container_provider.urn=/api/container
            #PUT changePopulatorCurrentPercentage 
                app.container_provider.put_current_percentage=${app.container_provider.urn}/%s/populator-current-percentage-%d

    #AccountProvider
        app.account_provider.host=localhost
	    app.account_provider.port=9393
        app.account_provider.urn=/accounts

    #Gateway
        app.gateway.port=9090

#Gateway maping sync services
app.map.hosts.ports={'${app.account_provider.urn}': 'http://${app.account_provider.host}:${app.account_provider.port}', \
                     '${app.container_provider.urn}': 'http://${app.container_provider.host}:${app.container_provider.port}'}



#Security
#Accounts Roles Mapping  Have to move to .env file
app.account.role.super-admin=ADMIN
app.account.role.accounts-admin=ACCOUNTS_ADMIN
app.account.role.container-admin=CONTAINER_ADMIN
app.account.role.container-user=CONTAINER_USER
app.account.role.orders-admin=ORDERS_ADMIN
app.account.role.orders-user=ORDERS_USER

http.method.get=GET
http.method.post=POST
http.method.put=PUT
http.method.delete=DELETE
http.method.all=ALL
app.security.pattern-method-delimeter=!!

app.map.roles.uri={ \
    '${app.container_provider.urn}/**!!${http.method.get}': {'${app.account.role.container-user}', '${app.account.role.super-admin}'}, \
    '${app.container_provider.urn}/**!!${http.method.all}': {'${app.account.role.container-admin}', '${app.account.role.super-admin}'}, \
    '${app.account_provider.urn}/**!!${http.method.all}': {'${app.account.role.accounts-admin}', '${app.account.role.super-admin}'} \
    } 